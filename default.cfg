# Defaults for ~/.treewm

[sceme]
# BorderWidth =              # border width
  # for color names, see /usr/X11R6/lib/X11/rgb.txt
# FGColor = yellow           # font color in title
# BGColor = black            # background color of desktops
# BGPixmap =                 # pixmap for window background (can be overwritten
                             # by client section)
# BDColor = rgb:5/5/5        # color of window borders
# TitleBGColor = rgb:0/0/5   # title background color
# HTitleBGColor = rgb:0/0/8  # highlighted title background color
# HHTitleBGColor = rgb:0/0/B # double-highlighted title background color
# IconFGColor = white        # icon/action font color
# IconBGColor = grey15       # icon background color
# HIconBGColor = grey45      # highlighted icon background color
# IconBDColor = grey         # icon border color
# Font = lucidasans-10       # title/standard font
# IconFont = (Font)          # icon title font
# MenuFont = (Font)          # font used in menus
#
# MenuFGColor = black        # menu text color
# MenuBGColor = grey         # menu background color
# HMenuBGColor = yellow      # selected menuitem background color
# MenuBDColor = black        # menu border color
# ShowKeys = true            # show keys in menus
# DefaultIcon =              # path of icon displayed if no other is available
# Button10 = none1.xpm       # paths of button pixmaps...
# Button11 = max2.xpm
# Button12 = max1.xpm
# Button13 = resize.xpm
# Button20 = none2.xpm
# Button21 = close.xpm
# Button22 = icon.xpm
# Button23 = move.xpm
                             # the position of an icon is the midpoint of
                             # the upper edge of its text rectangle
# MinIconX = 100             # minimal x-coordinate of icon
# MinIconY = 50              # minimal y-coordinate of icon
# GridX = 80                 # horizontal distance between two icons
# GridY = 70                 # vertical distance between two icons
# IconSpaceLeft = 35         # minimal space between icon and window ...
# IconSpaceRight = 35        # Choose values such that
# IconSpaceTop = 40          # IconSpaceLeft + IconSpaceRight < GridX
# IconSpaceBottom = 25       # and IconSpaceBottom + IconSpaceTop < GridY
# DoubleClickTime = 250      # if the time between two button presses is
                             # < this value, the click is interpreted as a
                             # double click


# [client]
# Name =                     # name of window
# x =                        # x-coordinate of window
# y =                        # y-coordinate of window
# width =                    # width of window
# height =                   # height of window
# XIcon =                    # x-coordinate of associated icon
# YIcon =                    # y-coordinate of associated icon
# AutoClose = false          # close desktop if there are no children any more
# Maximized = false          # is the client initially maximized?
                             #   (values >= 2 for totally maximized clients)
# HasTaskBarEntry =          # has the client a taskbar entry?
# HasTitle = true            # has the client a title bar?
# IconPath =                 # path of associated icon
# Sceme =                    # sceme used for this client
# Stacking = 1               # 0,1 or 2 (windows are generally placed above a
                             # window with a smaller number)

# the following entries are only used if the client is a desktop
# Action* =                  # command to be executed, if you want to
                             # execute an action put @ before its name
# BGPixmap =                 # pixmap for window background
# VirtualX = 1               # virtual width as a multiple of actual width
# VirtualY = 1               # virtual height as a multiple of actual height
# Tile = false               # tile windows on this desktop?
# AutoResize = false         # automatically resize desktop when necessary?
# AutoScroll = false         # change virtual position when mouse is moved out
                             # of the desktop

# NoBackGround = false       # don't set background (only used if desktop is
                             # the root desktop)
# RaiseOnClick = false       # raise window when you click on it, not recommended
# RaiseOnEnter = false       # raise window when you move the mouse into it
# FocusOnClick = false       # give window the focus when you click on it
# FocusOnEnter = true        # give window the focus when you move the mouse
                             # into it
# GrabAltClick = true        # you can for example raise the window by
                             # Alt + left mouse button
                             # note you can access the parent desktop if you
                             # additionaly press Control
# PassFirstClick = true      # when FocusOnClick or RaiseOnClick is on, pass
                             # the event to the client


# [action]
# XIcon =                    # x-coordinate of icon
# YIcon =                    # y-coordinate of icon
# Name = Icon                # name of icon
# Autostart = false          # execute action on startup
# Desktop = false            # does the action create a desktop?
# Command =                  # command to be executed
# Regex =                    # Regular expression for the title of the window
# WM_CLASS =                 # Condition for the window's WMClass Hint, you
                             # have three choices (case is ignored):
                             # <name>.<class>, <name>.*, *.<class>
# Keep = false               # wait for matching windows forever
# Client =                   # infos about client to be created
# WM_COMMAND = false         # does application set the WM_COMMAND property?
                             # this is useful for apps that need some time to
                             # start: if another window appears that doesn't
                             # belong to this app it doesn't get the client
                             # information Client = ...

# [menu]
# name = command             # entry name in the application menu, note that the
                             # order of the menus is the order you define them
                             # in the config file. The command 'command' is executed
                             # when the entry is selected.
                             # you can define submenus by $...